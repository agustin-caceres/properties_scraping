name: Scraping de propiedades (Posadas)

on:
  # Ejecutar manualmente desde la pestaña “Actions”
  workflow_dispatch:
  schedule:
     - cron: "0 10 * * 1"

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # ─────────────────── 1) Checkout del repo ───────────────────
      - name: Clonar repositorio
        uses: actions/checkout@v3

      # ──────────────── 2) Caché de paquetes pip ─────────────────
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # ─────── 3) Configurar Python + instalar dependencias ───────
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt

      # ─────────────── 4) Variables de entorno (.env) ─────────────
      - name: Cargar variables de entorno
        run: echo "DB_URL=${{ secrets.DB_URL }}" >> .env

      # ─────────────── 5) Ejecutar pipeline completo ──────────────
      - name: Ejecutar pipeline completo
        run: |
          python -m runner.run_pipeline argenprop -a -a max_pages=3

      # ─────────────── 6) Subir logs y resultados ────────────────
      - name: Guardar logs como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scraping-logs
          path: |
            logs/
            outputs/logs/
            outputs/data/properties_output.json
